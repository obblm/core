services:
  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  Obblm\Core\:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    resource: '../../*'
    public: false
    exclude: '../../{DependencyInjection,Entity,Migrations,Ressources,Tests,ObblmCoreBundle.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  Obblm\Core\Controller\:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    resource: '../../Controller'
    public: false
    tags: ['controller.service_arguments']

  obblm.cache:
    class: Symfony\Component\Cache\Adapter\FilesystemAdapter
    public: true
    arguments:
      - ''
      - 3600
      - '%kernel.cache_dir%/obblm/rule'

  obblm.cache.rules:
    alias: "obblm.cache"

  Obblm\Core\Helper\RuleHelper:
    autowire: true
    arguments:
      $adapter: "@obblm.cache.rules"

  Obblm\Core\Helper\Rule\RuleHelperInterface:
    alias: Obblm\Core\Helper\Rule\BaseRule

  Obblm\Core\Service\FileTeamUploader:
    autowire: true
    arguments:
      $targetDirectory: '%obblm.config.upload_directory%/team'

  Obblm\Core\Service\ObblmPackage:
    autowire: true
    arguments:
      $kernetProjectDir: '%kernel.project_dir%/public'
      $uploadDirectory: '%obblm.config.upload_directory%/team'

  Obblm\Core\Routing\RouteAutoloader:
    autowire: true
    public: false

  Obblm\Core\Routing\ObblmExtraLoader:
    arguments: [ '@Obblm\Core\Routing\RouteAutoloader' ]
    tags: [ routing.loader ]
  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
